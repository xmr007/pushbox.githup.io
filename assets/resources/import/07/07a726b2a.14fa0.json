[1,["5egL89AE1Dhr+5ZkzoDGtv"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[0,0,1,2,4],[1,0,1,3]],[[[[0,"gaussianBlur",[{"hash":4146601484,"record":null,"name":"gaussianBlur|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_color = a_color;\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n}","frag":"\nprecision highp float;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform widthArea {\n  float widthLength;\n};\nuniform heightArea {\n  float heightLength;\n};\nconst float RADIUS = 20.0;\nvec4 getBlurColor (vec2 pos) {\n  vec4 color = vec4(0);\n  float sum = 0.0;\n  for (float r = -RADIUS; r <= RADIUS; r++) {\n    for (float c = -RADIUS; c <= RADIUS; c++) {\n      vec2 target = pos + vec2(r / widthLength, c / heightLength);\n      float weight = (RADIUS - abs(r)) * (RADIUS - abs(c));\n      color += texture2D(texture, target) * weight;\n      sum += weight;\n    }\n  }\n  color /= sum;\n  return color;\n}\nvoid main () {\n  vec4 color = getBlurColor(v_uv0);\n  color.a = v_color.a;\n  gl_FragColor = color;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_color = a_color;\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n}","frag":"\nprecision highp float;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform float widthLength;\nuniform float heightLength;\nconst float RADIUS = 20.0;\nvec4 getBlurColor (vec2 pos) {\n  vec4 color = vec4(0);\n  float sum = 0.0;\n  for (float r = -RADIUS; r <= RADIUS; r++) {\n    for (float c = -RADIUS; c <= RADIUS; c++) {\n      vec2 target = pos + vec2(r / widthLength, c / heightLength);\n      float weight = (RADIUS - abs(r)) * (RADIUS - abs(c));\n      color += texture2D(texture, target) * weight;\n      sum += weight;\n    }\n  }\n  color /= sum;\n  return color;\n}\nvoid main () {\n  vec4 color = getBlurColor(v_uv0);\n  color.a = v_color.a;\n  gl_FragColor = color;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]}],"blocks":[{"name":"widthArea","binding":0,"members":[{"name":"widthLength","type":13,"count":1}],"defines":[]},{"name":"heightArea","binding":1,"members":[{"name":"heightLength","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"gaussianBlur|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"widthLength":{"type":13,"value":[500]},"heightLength":{"type":13,"value":[500]}}}]}]]],0,0,[],[],[]],[[[1,"gaussianBlur",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[0],[0]]]]